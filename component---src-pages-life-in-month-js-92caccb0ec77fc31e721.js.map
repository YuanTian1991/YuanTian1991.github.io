{"version":3,"file":"component---src-pages-life-in-month-js-92caccb0ec77fc31e721.js","mappings":"iKAgCIA,EAAqB,cAAiB,SAAeC,EAAOC,GAC9D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBP,EAAMQ,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBT,EAAMU,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAiBX,EAAMY,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,GAAQ,OAAyBb,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEzG,OAAoB,gBAAoBM,GAAW,OAAS,CAC1DH,WAAW,OAAKD,EAAQY,KAAMX,EAAuB,aAAZS,EAAyBV,EAAQa,SAAWb,EAAQ,YAAYc,OAAON,KAAcF,GAAUN,EAAQe,SAChJhB,IAAKA,GACJY,OAGL,KAAe,QA7CK,SAAgBK,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYH,OAAOO,IAAU,CACtCC,UAAWF,OAGR,OAAS,CAEdR,KAAM,CACJW,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,MAAOX,EAAMQ,QAAQI,KAAKC,QAC1BC,WAAYd,EAAMe,YAAYC,OAAO,eAIvCjB,QAAS,CACPkB,aAAcjB,EAAMkB,MAAMD,cAI5BpB,SAAU,CACRsB,OAAQ,aAAarB,OAAOE,EAAMQ,QAAQY,WAE3CnB,KAqB6B,CAChCoB,KAAM,YADR,CAEGxC,I,kIC7CGyC,GAAYC,E,OAAAA,IAAW,SAAAvB,GAAK,cAAK,CACrCwB,OAAQ,CACNC,QAAS,EACTC,OAAQ,EACRC,OAAQ,0CACRC,UAAW,OAEXC,QAAS,OACTC,SAAU,OACVC,OAAQ,MACRC,aAAc,cAEhBC,kBAAmB,CACjBC,UAAW,SACX3B,gBAAiB,YACjBU,aAAc,MACdE,OAAQ,sBACRR,MAAO,OACPe,OAAQ,MACR,cACEnB,gBAAiB,wBACjB,qBAAsB,gCACtB,iBAAkB,gCAClBO,WAAY,iCAJd,wBAKwB,2BALxB,oBAMoB,2BANpB,aAOc,2BAPd,IAUFqB,kBAAmB,CACjBD,UAAW,SACX3B,gBAAiB,aACjBU,aAAc,MACdE,OAAQ,sBACRR,MAAO,OACPe,OAAQ,MACR,cACEnB,gBAAiB,wBACjB,qBAAsB,gCACtB,iBAAkB,gCAClBO,WAAY,iCAJd,wBAKwB,2BALxB,oBAMoB,2BANpB,aAOc,2BAPd,QAYW,SAASsB,EAAYtD,GAClC,IAAME,EAAUsC,IACVe,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAAsCC,EAAAA,EAAAA,UAAS,GAAxCC,EAAP,KAAoBC,EAApB,KAEMC,EAAcC,MAAMC,KACxB,CACEC,OAAQ,MAEV,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAGVC,EACgC,KAAnC,IAAIC,MAAOC,cAAgB,OAAa,IAAID,MAAOE,WAqBtD,OAnBAC,EAAAA,EAAAA,YAAU,WAMR,GALAC,QAAQC,IAAI,QAASjB,EAAUkB,QAAUlB,EAAUkB,QAAQC,YAAc,GACzEH,QAAQC,IACN,SACAjB,EAAUkB,QAAUlB,EAAUkB,QAAQE,aAAe,GAEnDpB,EAAUkB,QAAS,CACrB,IAAIG,EAAYC,KAAKC,KAClBvB,EAAUkB,QAAQC,YAAcnB,EAAUkB,QAAQE,aAAgB,KAErEJ,QAAQC,IAAII,GACZ,IAAIG,EAAIF,KAAKG,MAAMzB,EAAUkB,QAAQC,YAAcE,GACnDL,QAAQC,IAAIO,GACZH,EAAYrB,EAAUkB,QAAQC,aAAeK,EAAI,GACjDR,QAAQC,IAAII,GACZjB,EAAeiB,MAEhB,CAACrB,EAAUkB,UAGZ,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKQ,MAAM,aAQX,gBAAC,IAAD,CAAWC,SAAU,KAAMjF,IAAKsD,GAC9B,sBAAIpD,UAAWD,EAAQwC,QACpBkB,EAAYuB,KAAI,SAAAC,GACf,OACE,sBACEC,MAAO,CACLzC,OAAQ,MACR0C,MAAO5B,EAAc,KACrBb,OAAQa,EAAc,OAIxB,gBAAC,IAAD,CACEhD,UAAW,EACXP,UACEiF,EAAIlB,EACAhE,EAAQiD,kBACRjD,EAAQmD,kBAEdgC,MAAO,CACLC,MAAO5B,EAAc,EAAI,KACzBb,OAAQa,EAAc,EAAI","sources":["webpack://tian-site/./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack://tian-site/./src/pages/life-in-month.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React, { useRef, useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Container, Grid, Paper, Box } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  pannel: {\n    padding: 0,\n    margin: 0,\n    height: \"calc(100vh - 64px - 16px - 49px - 38px)\",\n    listStyle: \"none\",\n    // border: \"0.1px solid silver\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    rowGap: \"0px\",\n    alignContent: \"flex-start\",\n  },\n  monthBlock_passed: {\n    textAlign: \"center\",\n    backgroundColor: \"lightgrey\",\n    borderRadius: \"2px\",\n    border: \"0px solid lightgrey\",\n    color: \"grey\",\n    margin: \"0px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(26, 32, 39, 0.7)\",\n      \"-webkit-transition\": \"background-color 100ms linear\",\n      \"-ms-transition\": \"background-color 100ms linear\",\n      transition: \"background-color 100ms linear\",\n      \"-webkit-transition\": \"font-weight 100ms linear\",\n      \"-ms-transition\": \"font-weight 100ms linear\",\n      transition: \"font-weight 100ms linear\",\n    },\n  },\n  monthBlock_future: {\n    textAlign: \"center\",\n    backgroundColor: \"whitesmoke\",\n    borderRadius: \"2px\",\n    border: \"0px solid lightgrey\",\n    color: \"grey\",\n    margin: \"0px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(26, 32, 39, 0.7)\",\n      \"-webkit-transition\": \"background-color 100ms linear\",\n      \"-ms-transition\": \"background-color 100ms linear\",\n      transition: \"background-color 100ms linear\",\n      \"-webkit-transition\": \"font-weight 100ms linear\",\n      \"-ms-transition\": \"font-weight 100ms linear\",\n      transition: \"font-weight 100ms linear\",\n    },\n  },\n}))\n\nexport default function LifeInMonth(props) {\n  const classes = useStyles()\n  const pannelRef = useRef(null)\n  const [squreLength, setSqureLength] = useState(0)\n\n  const monthBlocks = Array.from(\n    {\n      length: 960,\n    },\n    (v, k) => k + 1\n  )\n\n  const currentMonth =\n    (new Date().getFullYear() - 1991) * 12 + new Date().getMonth()\n\n  useEffect(() => {\n    console.log(\"width\", pannelRef.current ? pannelRef.current.offsetWidth : 0)\n    console.log(\n      \"height\",\n      pannelRef.current ? pannelRef.current.offsetHeight : 0\n    )\n    if (pannelRef.current) {\n      let tmpLength = Math.sqrt(\n        (pannelRef.current.offsetWidth * pannelRef.current.offsetHeight) / 960\n      )\n      console.log(tmpLength)\n      let A = Math.floor(pannelRef.current.offsetWidth / tmpLength)\n      console.log(A)\n      tmpLength = pannelRef.current.offsetWidth / (A + 2)\n      console.log(tmpLength)\n      setSqureLength(tmpLength)\n    }\n  }, [pannelRef.current])\n\n  return (\n    <Layout>\n      <SEO title=\"Page two\" />\n      {/* <p\n        style={{ textAlign: \"center\", fontSize: \"0.75em\", marginBottom: \"1em\" }}\n      >\n        {\" \"}\n        Life in Month\n      </p> */}\n\n      <Container maxWidth={\"xl\"} ref={pannelRef}>\n        <ul className={classes.pannel}>\n          {monthBlocks.map(m => {\n            return (\n              <li\n                style={{\n                  margin: \"0px\",\n                  width: squreLength + \"px\",\n                  height: squreLength + \"px\",\n                  // border: \"1px solid lightgrey\",\n                }}\n              >\n                <Paper\n                  elevation={0}\n                  className={\n                    m < currentMonth\n                      ? classes.monthBlock_passed\n                      : classes.monthBlock_future\n                  }\n                  style={{\n                    width: squreLength - 2 + \"px\",\n                    height: squreLength - 2 + \"px\",\n                  }}\n                ></Paper>\n              </li>\n            )\n          })}\n        </ul>\n      </Container>\n    </Layout>\n  )\n}\n"],"names":["Paper","props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","root","outlined","concat","rounded","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name","useStyles","makeStyles","pannel","padding","margin","height","listStyle","display","flexWrap","rowGap","alignContent","monthBlock_passed","textAlign","monthBlock_future","LifeInMonth","pannelRef","useRef","useState","squreLength","setSqureLength","monthBlocks","Array","from","length","v","k","currentMonth","Date","getFullYear","getMonth","useEffect","console","log","current","offsetWidth","offsetHeight","tmpLength","Math","sqrt","A","floor","title","maxWidth","map","m","style","width"],"sourceRoot":""}