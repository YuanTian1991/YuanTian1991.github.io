{"version":3,"sources":["webpack:///./src/templates/noteTemplate.js"],"names":["Template","data","classes","useStyles","markdownRemark","frontmatter","html","useEffect","console","log","className","maxWidth","style","marginTop","marginBottom","date","fontSize","fontWeight","title","undefined","tags","map","tag","tagIndex","size","key","label","sideChipLabel","variant","margin","backgroundColor","dangerouslySetInnerHTML","__html","pageQuery","makeStyles","theme","color","fontFamily"],"mappings":"2FAAA,kKAMe,SAASA,EAAT,GAEX,IADFC,EACC,EADDA,KAEMC,EAAUC,IACRC,EAAmBH,EAAnBG,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAMrB,OAJAC,qBAAU,WACRC,QAAQC,IAAIJ,KACX,IAGD,yBAAKK,UAAU,uBACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAWC,SAAS,MAEhB,0BAAMC,MAAO,CAAEC,UAAW,MAAOC,aAAc,QAAUT,EAAYU,MACrE,wBAAIH,MAAO,CAAEI,SAAU,QAAUC,WAAY,MAAQJ,UAAW,QAASC,aAAc,UAAYT,EAAYa,YAGxFC,IAArBd,EAAYe,MACVf,EAAYe,KAAKC,KAAI,SAACC,EAAKC,GACzB,OACE,kBAAC,IAAD,CACEC,KAAK,QACLC,IAAKF,EACLG,MACE,0BACEhB,UAAWR,EAAQyB,eADrB,IAEKL,GAEPM,QAAQ,WACRhB,MAAO,CAACiB,OAAQ,MAAOf,aAAc,MAAOE,SAAU,OAAQc,gBAAiB,cAOzF,yBACEpB,UAAU,oBACVqB,wBAAyB,CAAEC,OAAQ1B,QAQxC,IAAM2B,EAAS,aAehB9B,EAAY+B,aAAW,SAACC,GAAD,MAAY,CACvCR,cAAe,CACbX,SAAU,MACVc,gBAAiB,sBACjBM,MAAO,UACPnB,WAAY,MACZoB,WAAY","file":"component---src-templates-note-template-js-fc45086a467872a9898c.js","sourcesContent":["import React, {useEffect} from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { Paper, Container, Divider, Typography, Chip } from '@material-ui/core';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const classes = useStyles();\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  \n  useEffect(() => {\n    console.log(frontmatter)\n  }, [])\n\n  return (\n    <div className=\"blog-post-container\">\n      <Layout>\n      <Container maxWidth=\"md\">\n        {/* <Paper elevation={2} style={{ padding: '2em', backgroundColor: 'rgba(245, 245, 245, 0)' }}> */}\n          <span style={{ marginTop: '1em', marginBottom: '0px' }}>{frontmatter.date}</span>\n          <h1 style={{ fontSize: '2.5em' , fontWeight: '700',  marginTop: '0.2em', marginBottom: '0.2em' }}>{frontmatter.title}</h1>\n          \n          {\n            frontmatter.tags !== undefined && (\n              frontmatter.tags.map((tag, tagIndex) => {\n                return (\n                  <Chip \n                    size=\"small\" \n                    key={tagIndex} \n                    label={                          \n                      <code\n                        className={classes.sideChipLabel}\n                        > {tag}\n                      </code>} \n                    variant=\"outlined\"\n                    style={{margin: '5px', marginBottom: '1em', fontSize: '14px', backgroundColor: \"white\"}} \n                  />\n                )\n              })\n            )\n          }\n\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        {/* </Paper> */}\n        </Container>\n      </Layout>\n    </div>\n  )\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        tags\n        abstract\n      }\n    }\n  }\n`\n\nconst useStyles = makeStyles((theme) => ({\n  sideChipLabel: {\n    fontSize: '1em', \n    backgroundColor: 'rgb(255,255,255, 0)', \n    color: '#757575', \n    fontWeight: '100',\n    fontFamily: \"'Menlo', 'Monaco', 'Andale Mono', 'Ubuntu Mono', 'SFMono-Regular', monospace\"\n  },\n}));"],"sourceRoot":""}