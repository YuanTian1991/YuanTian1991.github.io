{"version":3,"file":"component---src-pages-life-in-month-js-085ae833f3394bb243a0.js","mappings":"iOAQMA,GAAYC,E,OAAAA,IAAW,SAAAC,GAAK,cAAK,CACrCC,OAAQ,CACNC,QAAS,EACTC,OAAQ,EACRC,OAAQ,iDACRC,UAAW,OAEXC,QAAS,OACTC,SAAU,OACVC,OAAQ,MACRC,aAAc,cAEhBC,kBAAmB,CACjBC,UAAW,SACXC,gBAAiB,UACjBC,aAAc,MACdC,OAAQ,sBACRC,MAAO,OACPZ,OAAQ,MACR,cACES,gBAAiB,wBACjB,qBAAsB,gCACtB,iBAAkB,gCAClBI,WAAY,iCAJd,wBAKwB,2BALxB,oBAMoB,2BANpB,aAOc,2BAPd,IAUFC,kBAAmB,CACjBN,UAAW,SACXC,gBAAiB,UACjBC,aAAc,MACdC,OAAQ,sBACRC,MAAO,OACPZ,OAAQ,MACR,cACES,gBAAiB,wBACjB,qBAAsB,gCACtB,iBAAkB,gCAClBI,WAAY,iCAJd,wBAKwB,2BALxB,oBAMoB,2BANpB,aAOc,2BAPd,QAYW,SAASE,EAAYC,GAClC,IAAMC,EAAUtB,IACVuB,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAAsCC,EAAAA,EAAAA,UAAS,GAAxCC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAApCG,EAAP,KAAkBC,EAAlB,KAEMC,EAAcC,MAAMC,KACxB,CACEC,OAAQ,MAEV,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAGVC,EACgC,KAAnC,IAAIC,MAAOC,cAAgB,OAAa,IAAID,MAAOE,WAAa,GAEnEC,EAAAA,EAAAA,YAAU,WACR,GAAIjB,EAAUkB,QAAS,CACrB,IAAIC,EAAYC,KAAKC,KAClBrB,EAAUkB,QAAQI,YAActB,EAAUkB,QAAQK,aAAgB,KAGrEC,QAAQC,IAAIzB,EAAUkB,QAAQI,aAC9BE,QAAQC,IAAIzB,EAAUkB,QAAQK,cAE9B,IAAIG,EAAIN,KAAKO,MAAM3B,EAAUkB,QAAQI,YAAcH,GACnDA,EAAYnB,EAAUkB,QAAQI,aAAeI,EAAI,GAEjDtB,EAAee,MAEhB,CAACnB,EAAUkB,UAcd,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKU,MAAM,kBAQX,gBAAC,IAAD,CAAWC,SAAU,MACnB,gBAAC,IAAD,CACEC,WAAS,EAETC,eAAe,UAGf,gBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAKpC,GAEpC,sBAAIqC,UAAWtC,EAAQnB,QACpB2B,EAAY+B,KAAI,SAAAC,GACf,OACE,sBACEC,MAAO,CACL1D,OAAQ,MACR2D,MAAOtC,EAAc,KACrBpB,OAAQoB,EAAc,OAIxB,gBAAC,IAAD,CACEuC,UAAW,EACXL,UACEE,GAAK1B,EACDd,EAAQV,kBACRU,EAAQH,kBAEd4C,MAAO,CACLC,MAAOtC,EAAc,EAAI,KACzBpB,OAAQoB,EAAc,EAAI,MAE5BwC,YAAa,kBArDRC,EAqD+BL,EApDlDM,EAAYzB,KAAKO,MAAMiB,EAAQ,GAAK,MAGrB,KAFfE,EAAaF,EAAQ,MAGvBC,GAAwB,EACxBC,EAAa,SAGfxC,EAAauC,EAAY,MAAQC,GATV,IAAAF,EACnBC,EACAC,GAoDcC,aAAc,kBAAMzC,EAAa,aAO7C,gBAAC,IAAD,CAAM0B,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,qBACIM,MAAO,CAAE1D,OAAQ,MAAOQ,UAAW,SAAU0D,SAAU,UAEtD3C","sources":["webpack://tian-site/./src/pages/life-in-month.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Container, Grid, Paper, Box } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n  pannel: {\n    padding: 0,\n    margin: 0,\n    height: \"calc(100vh - 64px - 16px - 49px - 38px - 31px)\",\n    listStyle: \"none\",\n    // border: \"0.1px solid silver\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    rowGap: \"0px\",\n    alignContent: \"flex-start\",\n  },\n  monthBlock_passed: {\n    textAlign: \"center\",\n    backgroundColor: \"#cfd8dc\",\n    borderRadius: \"2px\",\n    border: \"0px solid lightgrey\",\n    color: \"grey\",\n    margin: \"0px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(26, 32, 39, 0.7)\",\n      \"-webkit-transition\": \"background-color 100ms linear\",\n      \"-ms-transition\": \"background-color 100ms linear\",\n      transition: \"background-color 100ms linear\",\n      \"-webkit-transition\": \"font-weight 100ms linear\",\n      \"-ms-transition\": \"font-weight 100ms linear\",\n      transition: \"font-weight 100ms linear\",\n    },\n  },\n  monthBlock_future: {\n    textAlign: \"center\",\n    backgroundColor: \"#f5f5f5\",\n    borderRadius: \"2px\",\n    border: \"0px solid lightgrey\",\n    color: \"grey\",\n    margin: \"0px\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(26, 32, 39, 0.7)\",\n      \"-webkit-transition\": \"background-color 100ms linear\",\n      \"-ms-transition\": \"background-color 100ms linear\",\n      transition: \"background-color 100ms linear\",\n      \"-webkit-transition\": \"font-weight 100ms linear\",\n      \"-ms-transition\": \"font-weight 100ms linear\",\n      transition: \"font-weight 100ms linear\",\n    },\n  },\n}))\n\nexport default function LifeInMonth(props) {\n  const classes = useStyles()\n  const pannelRef = useRef(null)\n  const [squreLength, setSqureLength] = useState(0)\n  const [hoverText, setHoverText] = useState(\"\")\n\n  const monthBlocks = Array.from(\n    {\n      length: 960,\n    },\n    (v, k) => k + 1\n  )\n\n  const currentMonth =\n    (new Date().getFullYear() - 1991) * 12 + new Date().getMonth() + 1\n\n  useEffect(() => {\n    if (pannelRef.current) {\n      let tmpLength = Math.sqrt(\n        (pannelRef.current.offsetWidth * pannelRef.current.offsetHeight) / 960\n      )\n\n      console.log(pannelRef.current.offsetWidth)\n      console.log(pannelRef.current.offsetHeight)\n      \n      let A = Math.floor(pannelRef.current.offsetWidth / tmpLength)\n      tmpLength = pannelRef.current.offsetWidth / (A + 2)\n\n      setSqureLength(tmpLength)\n    }\n  }, [pannelRef.current])\n\n  const handleBlockHover = index => {\n    let hoverYear = Math.floor(index / 12 + 1991)\n    let hoverMonth = index % 12\n\n    if (hoverMonth === 0) {\n      hoverYear = hoverYear - 1\n      hoverMonth = 12\n    }\n\n    setHoverText(hoverYear + \" - \" + hoverMonth)\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Life in Month\" />\n      {/* <p\n        style={{ textAlign: \"center\", fontSize: \"0.75em\", marginBottom: \"1em\" }}\n      >\n        {\" \"}\n        Life in Month\n      </p> */}\n\n      <Container maxWidth={\"xl\"}>\n        <Grid\n          container\n          // direction=\"row\"\n          justifyContent=\"center\"\n          // alignItems=\"center\"\n        >\n          <Grid item xs={12} sm={8} md={6} ref={pannelRef}>\n\n            <ul className={classes.pannel}>\n              {monthBlocks.map(m => {\n                return (\n                  <li\n                    style={{\n                      margin: \"0px\",\n                      width: squreLength + \"px\",\n                      height: squreLength + \"px\",\n                      // border: \"1px solid lightgrey\",\n                    }}\n                  >\n                    <Paper\n                      elevation={0}\n                      className={\n                        m <= currentMonth\n                          ? classes.monthBlock_passed\n                          : classes.monthBlock_future\n                      }\n                      style={{\n                        width: squreLength - 2 + \"px\",\n                        height: squreLength - 2 + \"px\",\n                      }}\n                      onMouseOver={() => handleBlockHover(m)}\n                      onMouseLeave={() => setHoverText(\"\")}\n                    ></Paper>\n                  </li>\n                )\n              })}\n            </ul>\n          </Grid>\n          <Grid item xs={12} sm={2} >\n          <p\n              style={{ margin: \"1em\", textAlign: \"center\", fontSize: \"0.8em\" }}\n            >\n              {hoverText}\n            </p>\n            </Grid>\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n"],"names":["useStyles","makeStyles","theme","pannel","padding","margin","height","listStyle","display","flexWrap","rowGap","alignContent","monthBlock_passed","textAlign","backgroundColor","borderRadius","border","color","transition","monthBlock_future","LifeInMonth","props","classes","pannelRef","useRef","useState","squreLength","setSqureLength","hoverText","setHoverText","monthBlocks","Array","from","length","v","k","currentMonth","Date","getFullYear","getMonth","useEffect","current","tmpLength","Math","sqrt","offsetWidth","offsetHeight","console","log","A","floor","title","maxWidth","container","justifyContent","item","xs","sm","md","ref","className","map","m","style","width","elevation","onMouseOver","index","hoverYear","hoverMonth","onMouseLeave","fontSize"],"sourceRoot":""}