{
    "componentChunkName": "component---src-templates-note-template-js",
    "path": "/notes/Regex-snippets-in-R",
    "result": {"data":{"markdownRemark":{"html":"<h2>Detect if a certain pattern exist in a string</h2>\n<p><a href=\"https://stringr.tidyverse.org/reference/str_detect.html\">stringr</a> is a very good package for this task.</p>\n<ul>\n<li>The <code class=\"language-text\">[.]</code> is important.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token operator\">></span> library<span class=\"token punctuation\">(</span><span class=\"token string\">\"stringr\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> str_detect<span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs/Logs/Cycles//XXX_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_Cycle1[.]\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token boolean\">TRUE</span></code></pre></div>\n<h2>Extract between two strings</h2>\n<p>This is so commonly used, and every time I have to re-google. A good way I found is to use <a href=\"https://cran.r-project.org/web/packages/qdapRegex/index.html\">qdapRegex package</a>. A very cool thing here is that it does not to deal with special characters like .</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token operator\">></span> library<span class=\"token punctuation\">(</span><span class=\"token string\">\"qdapRegex\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> ex_between<span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs/Logs/Cycles//XXX_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_Cycle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".log\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"1.00\"</span>\n<span class=\"token operator\">></span> ex_between<span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs/Logs/Cycles//XXX_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"//\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"XXX\"</span>\n<span class=\"token operator\">></span> ex_between<span class=\"token punctuation\">(</span><span class=\"token string\">\"Logs/Logs/Cycles//XXX_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_Cycle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".log\"</span><span class=\"token punctuation\">,</span> include.markers <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># A parameter to keep the two side strings.</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"_Cycle1.00.log\"</span></code></pre></div>\n<h2>Split string</h2>\n<p>Another commonly used functionality. I used to use strsplit, but recently I found something much better - <a href=\"https://stringr.tidyverse.org/reference/word.html\">word</a>.</p>\n<p>This function is really cool.</p>\n<ul>\n<li>The second and third parameters decide part of the string you want to extract after splitting by the sep.</li>\n<li>It can be done reversibly. By setting start/end to -1.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token operator\">></span> library<span class=\"token punctuation\">(</span><span class=\"token string\">\"stringr\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> word<span class=\"token punctuation\">(</span><span class=\"token string\">\"_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> start <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">\"[.]\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"_Cycle1\"</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token comment\">#</span>\n<span class=\"token operator\">></span> word<span class=\"token punctuation\">(</span><span class=\"token string\">\"_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> start <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span>fixed<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"_Cycle1.00\"</span>\n<span class=\"token comment\"># Reversely</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># In the below example it will start from the second-last string part after split (00), and end with the last string after split (log), paste them together and return.</span>\n<span class=\"token operator\">></span> word<span class=\"token punctuation\">(</span><span class=\"token string\">\"_Cycle1.00.log\"</span><span class=\"token punctuation\">,</span> start<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span>fixed<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"00.log\"</span></code></pre></div>","frontmatter":{"date":"December 02, 2022","slug":"/notes/Regex-snippets-in-R","title":"Regex snippets in R","tags":["R","Regex"],"abstract":"My R regex collections, will be expensively used in daily work."}}},"pageContext":{"slug":"/notes/Regex-snippets-in-R"}},
    "staticQueryHashes": ["63159454"]}