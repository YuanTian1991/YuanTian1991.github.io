{
    "componentChunkName": "component---src-templates-note-template-js",
    "path": "/notes/My-Shell-Commands",
    "result": {"data":{"markdownRemark":{"html":"<h2>1. Open/Withdraw Access to another User</h2>\n<p>This happens everytime I change my UCL password, then I lost access to our lab server. So a quick way to do it, is create a tmp account, then I continue work on that account, until the main account fixed. So during this time, I need to always give access of folders to the tmp account, then withdraw it couple weeks later.</p>\n<p>to give access to public</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> FEM_13/</code></pre></div>\n<p>to withdraw it:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> FEM_13/</code></pre></div>\n<p><strong>This is a bad implementation, as <code class=\"language-text\">777</code> opens the folder to everyone, I should find a better way some day.</strong></p>\n<h2>2. Change File Ownership</h2>\n<p>This happens when I take back the fold access, and want to get all file modified by my another account.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R regmtyu Polish_Cohort_11/</code></pre></div>\n<h2>3. Find and copy files with certain postfix</h2>\n<p>This happens when I want to found out a list of files recursively in a folder, then copy them into another places.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f  -iname <span class=\"token string\">\"*cpg.txt.gz\"</span> -exec <span class=\"token function\">cp</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">..</span>/<span class=\"token punctuation\">..</span>/Data/5mC/ <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Similarlly, below code can move correponding files to target folder:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">\"*AAA*\"</span> -exec <span class=\"token function\">mv</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> target/path <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>4. Grep recursively for a specific file type on Linux</h2>\n<p>A good answer from <a href=\"https://stackoverflow.com/questions/22224719/grep-recursively-for-a-specific-file-type-on-linux?noredirect=1&#x26;lq=1\">this post</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> -r --include<span class=\"token operator\">=</span><span class=\"token string\">\"*.[R]\"</span> <span class=\"token string\">\"NC49\"</span> <span class=\"token builtin class-name\">.</span></code></pre></div>\n<h2>5. Copy certain file and their folder structure</h2>\n<p>This command is used when I need to only extract R script from a series of folders, and copy them all into another folder for saving.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -name <span class=\"token string\">'*.R'</span> -exec <span class=\"token function\">cp</span> --parents <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">..</span>/GithubBackup/BathCRC/ <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>6. Kill all process by certain user</h2>\n<p>Normally <code class=\"language-text\">sudo</code> is not used here.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">killall</span> -u ubuntu</code></pre></div>\n<h2>7. Create SSH key for Server Login</h2>\n<p>Firstly create a ssh key.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-keygen -t ed25519</code></pre></div>\n<p>Then change the key name as below: `/Users/tian/.ssh/BathLinux</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tian@Yuans-Mac-mini ~ $ ssh-keygen -t ed25519\nGenerating public/private ed25519 key pair.\nEnter <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token function\">which</span> to save the key <span class=\"token punctuation\">(</span>/Users/tian/.ssh/id_ed25519<span class=\"token punctuation\">)</span>: /Users/tian/.ssh/BathLinux\nEnter passphrase <span class=\"token punctuation\">(</span>empty <span class=\"token keyword\">for</span> no passphrase<span class=\"token punctuation\">)</span>:\nEnter same passphrase again:</code></pre></div>\n<p>Then copy the content of <code class=\"language-text\">BathLinux.pub</code> to a file named <code class=\"language-text\">authorized_keys</code> in <code class=\"language-text\">~/.ssh</code>. If this file not exist, just create it.</p>\n<p>Then modify <code class=\"language-text\">config</code> file in <code class=\"language-text\">~/.ssh</code> folder, add below information:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Host BathLinux\n  HostName linux.bath.ac.uk\n  User ty456\n  ForwardX11Trusted <span class=\"token function\">yes</span>\n  IdentityFile ~/.ssh/BathLinux</code></pre></div>\n<p>That's it, not I can login Aantra as:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> BathLinux</code></pre></div>\n<p>If I need to SSH twice. I need to create another ssh key named: <code class=\"language-text\">AnatraFromMacMini</code>. Then write as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Host Anatra\n    Hostname anatra.bath.ac.uk\n    ProxyJump ty456@BathLinux\n    User ty456\n    ForwardX11Trusted <span class=\"token function\">yes</span>\n    IdentityFile ~/.ssh/AnatraFromMacMini</code></pre></div>\n<p>So, now I can log into Anatra directly as <code class=\"language-text\">ssh Anatra</code></p>\n<h2>8. Find recursively then create soft link</h2>\n<p>This is particularly useful when I get a folder contain recursive files, then I need to \"falt\" them for software input.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /scratch1/folder -name <span class=\"token string\">\"*.fq.gz\"</span> -exec <span class=\"token function\">ln</span> -s <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> ./ <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In above command, I search folder to recursively find <code class=\"language-text\">.fq.gz</code> file, then create a link for each of them (<code class=\"language-text\">{}</code>) to current folder.</p>\n<h2>9. Sync only new or modified files</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> -avz  --progress ./oldFolder /data3/newFolder</code></pre></div>","frontmatter":{"date":"July 27, 2020","slug":"/notes/My-Shell-Commands","title":"My Shell Commands","tags":["Shell"],"abstract":"This is just a simply post to record some of my commonly used bash script. So that I can copy paste quickly."}}},"pageContext":{"slug":"/notes/My-Shell-Commands"}},
    "staticQueryHashes": ["63159454"]}