{"componentChunkName":"component---src-templates-note-template-js","path":"/notes/Set-up-UCL-VPN-for-Linux-System","result":{"data":{"markdownRemark":{"html":"<p>I am not good at VPN, but using it to access UCL school resource is really a neccesary for my daily work. Previously I always use Linux system (<a href=\"https://elementary.io/\">elementary OS</a>). Howeverm it seems UCL did not provide a detailed explaination how to set up VPN in Linux system.</p>\n<p>So I explored online a bit before, find a solution for myself. Now I am shifting to Mac system mostly, but it's better to record a bit the linux VPN system.</p>\n<p>Merely I used OpenConnec, so initially I need to install the <code class=\"language-text\">openconnect</code> on my computer.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> openconnect</code></pre></div>\n<p>Then created a fold in my home directory like bleow: In the folder called \"./cisco\", there are two folder called \"vpn\" and \"hostscan\".</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tian@ThinkPad-X240:~/.cisco$ <span class=\"token function\">ls</span>\ncsd-wrapper.sh  hostscan  vpn</code></pre></div>\n<p>Then I found a nice script from Github. <strong>I can't find the origin script url, but below is not what I wrote.</strong></p>\n<p>Then finally, in my <code class=\"language-text\">.bashrc</code> file I addded one line:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">alias</span> .VPN<span class=\"token operator\">=</span><span class=\"token string\">\"sudo openconnect --csd-user=tian --csd-wrapper=/home/tian/.cisco/csd-wrapper.sh vpn.ucl.ac.uk\"</span></code></pre></div>\n<p>Then everytime I need to open VPN, I directly type: '.VPN' in temrinal then it works.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># Cisco Anyconnect CSD wrapper for OpenConnect</span>\n\n<span class=\"token comment\"># Enter your vpn host here</span>\n<span class=\"token assign-left variable\">CSD_HOSTNAME</span><span class=\"token operator\">=</span>vpn.ucl.ac.uk\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${CSD_HOSTNAME}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Define CSD_HOSTNAME with vpn-host in script text. Exiting.\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">HOSTSCAN_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.cisco/hostscan\"</span>\n<span class=\"token assign-left variable\">LIB_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$HOSTSCAN_DIR</span>/lib\"</span>\n<span class=\"token assign-left variable\">BIN_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$HOSTSCAN_DIR</span>/bin\"</span>\n\n<span class=\"token assign-left variable\">BINS</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cscan\"</span> <span class=\"token string\">\"cstub\"</span> <span class=\"token string\">\"cnotify\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># parsing command line</span>\n<span class=\"token builtin class-name\">shift</span>\n\n<span class=\"token assign-left variable\">URL</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">TICKET</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">STUB</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">GROUP</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">CERTHASH</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">LANGSELEN</span><span class=\"token operator\">=</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-ticket\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">TICKET</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-stub\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">STUB</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-group\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">GROUP</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-certhash\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">CERTHASH</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-url\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">URL</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"-langselen\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">shift</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">LANGSELEN</span><span class=\"token operator\">=</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span>\n    <span class=\"token builtin class-name\">shift</span>\n<span class=\"token keyword\">done</span>\n\n\n<span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$ARCH</span>\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"x86_64\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token string\">\"linux_x64\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token string\">\"linux_i386\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># creating dirs</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">dir</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$HOSTSCAN_DIR</span> <span class=\"token variable\">$LIB_DIR</span> <span class=\"token variable\">$BIN_DIR</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">$dir</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n        <span class=\"token function\">mkdir</span> -p <span class=\"token variable\">$dir</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># getting manifest, and checking binaries</span>\n<span class=\"token function\">wget</span> --no-check-certificate -c <span class=\"token string\">\"https://<span class=\"token variable\">${CSD_HOSTNAME}</span>/CACHE/sdesktop/hostscan/<span class=\"token variable\">$ARCH</span>/manifest\"</span> -O <span class=\"token string\">\"<span class=\"token variable\">$HOSTSCAN_DIR</span>/manifest\"</span>\n\n<span class=\"token comment\"># generating md5.sum with full paths from manifest</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HOSTSCAN_DIR</span><span class=\"token operator\">=</span><span class=\"token variable\">$HOSTSCAN_DIR</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$HOSTSCAN_DIR</span>/manifest <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> -r <span class=\"token string\">'s/\\(|\\)//g'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ cmd = \"find <span class=\"token variable\">$HOSTSCAN_DIR</span> -iname \" <span class=\"token variable\">$2</span>; while (cmd | getline line) { print <span class=\"token variable\">$4</span>, line; } }'</span> <span class=\"token operator\">></span> <span class=\"token variable\">$HOSTSCAN_DIR</span>/md5.sum\n\n<span class=\"token comment\"># check number of files either</span>\n<span class=\"token assign-left variable\">MD5_LINES</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">wc</span> --lines $HOSTSCAN_DIR/md5.sum <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print <span class=\"token variable\">$1</span>; }'</span><span class=\"token variable\">`</span></span>\n<span class=\"token assign-left variable\">MANIFEST_LINES</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">wc</span> --lines $HOSTSCAN_DIR/manifest <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print <span class=\"token variable\">$1</span>; }'</span><span class=\"token variable\">`</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Got <span class=\"token variable\">$MANIFEST_LINES</span> files in manifes, locally found <span class=\"token variable\">$MD5_LINES</span>\"</span>\n\n<span class=\"token comment\"># check md5</span>\nmd5sum -c <span class=\"token variable\">$HOSTSCAN_DIR</span>/md5.sum\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$?</span>\"</span> -ne <span class=\"token string\">\"0\"</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"<span class=\"token variable\">$MD5_LINES</span>\"</span> -ne <span class=\"token string\">\"<span class=\"token variable\">$MANIFEST_LINES</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Corrupted files, or whatever wrong with md5 sums, or missing some file\"</span>\n    <span class=\"token comment\"># just download every file mentioned in manifest (not ideal, but hopefully should be enough)</span>\n    <span class=\"token assign-left variable\">FILES</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> $HOSTSCAN_DIR/manifest <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> -r <span class=\"token string\">'s/\\(|\\)//g'</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print <span class=\"token variable\">$2</span>; }'</span><span class=\"token variable\">)</span></span> <span class=\"token punctuation\">)</span>\n    <span class=\"token assign-left variable\">WORK_DIR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span>\n    <span class=\"token assign-left variable\">TMP_DIR</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>mktemp -d<span class=\"token variable\">`</span></span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$TMP_DIR</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">${FILES<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n        <span class=\"token assign-left variable\">FILE</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$i</span>\"</span><span class=\"token variable\">)</span></span>\"</span>\n           \n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Downloading: <span class=\"token variable\">$FILE</span> to <span class=\"token variable\">$TMP_DIR</span>\"</span>\n        <span class=\"token function\">wget</span> --no-check-certificate -c <span class=\"token string\">\"https://<span class=\"token variable\">${CSD_HOSTNAME}</span>/CACHE/sdesktop/hostscan/<span class=\"token variable\">$ARCH</span>/<span class=\"token variable\">$FILE</span>\"</span> -O <span class=\"token variable\">$FILE</span>\n\n        <span class=\"token comment\"># some files are in gz (don't understand logic here)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">$FILE</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> -s <span class=\"token variable\">$FILE</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">then</span>\n            <span class=\"token comment\"># remove 0 size files</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -s <span class=\"token variable\">$FILE</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> \n                <span class=\"token function\">rm</span> <span class=\"token variable\">$FILE</span>\n            <span class=\"token keyword\">fi</span>\n            \n            <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Failure on <span class=\"token variable\">$FILE</span>, trying gz\"</span>\n            <span class=\"token assign-left variable\">FILE_GZ</span><span class=\"token operator\">=</span><span class=\"token variable\">$FILE</span>.gz\n            <span class=\"token function\">wget</span> --no-check-certificate -c <span class=\"token string\">\"https://<span class=\"token variable\">${CSD_HOSTNAME}</span>/CACHE/sdesktop/hostscan/<span class=\"token variable\">$ARCH</span>/<span class=\"token variable\">$FILE_GZ</span>\"</span> -O <span class=\"token variable\">$FILE_GZ</span>\n            gunzip --verbose --decompress <span class=\"token variable\">$FILE_GZ</span>\n        <span class=\"token keyword\">fi</span>\n\t\n        <span class=\"token comment\"># don't know why, but my version of hostscan requires tables to be stored in libs</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$FILE</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> --extended-regexp --quiet --invert-match <span class=\"token string\">\".so|tables.dat\"</span>\n        <span class=\"token assign-left variable\">IS_LIB</span><span class=\"token operator\">=</span><span class=\"token variable\">$?</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$IS_LIB</span>\"</span> -eq <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">then</span>\n            <span class=\"token function\">cp</span> --verbose <span class=\"token variable\">$FILE</span> <span class=\"token variable\">$LIB_DIR</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token function\">cp</span> --verbose <span class=\"token variable\">$FILE</span> <span class=\"token variable\">$BIN_DIR</span>\n        <span class=\"token keyword\">fi</span>\n        \n    <span class=\"token keyword\">done</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">${BINS<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Setting excecution bit on: <span class=\"token variable\">$BIN_DIR</span>/<span class=\"token variable\">$i</span>\"</span>\n        <span class=\"token function\">chmod</span> u+x <span class=\"token variable\">$BIN_DIR</span>/<span class=\"token variable\">$i</span>\n    <span class=\"token keyword\">done</span>\n    \n    <span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$WORK_DIR</span>\n    <span class=\"token function\">rm</span> -rf <span class=\"token variable\">$TMP_DIR</span>\n    \n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># cstub doesn't care about logging options, sic!</span>\n<span class=\"token comment\">#ARGS=\"-log debug -ticket $TICKET -stub $STUB -group $GROUP -host $URL -certhash $CERTHASH\"</span>\n<span class=\"token assign-left variable\">ARGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-log error -ticket <span class=\"token variable\">$TICKET</span> -stub <span class=\"token variable\">$STUB</span> -group <span class=\"token variable\">$GROUP</span> -host <span class=\"token variable\">$URL</span> -certhash <span class=\"token variable\">$CERTHASH</span>\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Launching: <span class=\"token variable\">$BIN_DIR</span>/cstub <span class=\"token variable\">$ARGS</span>\"</span>\n<span class=\"token variable\">$BIN_DIR</span>/cstub <span class=\"token variable\">$ARGS</span></code></pre></div>","frontmatter":{"date":"July 17, 2020","slug":"/notes/Set-up-UCL-VPN-for-Linux-System","title":"Set up UCL VPN for Linux System","abstract":"It seems UCL only provided detailed guild on how to set up VPN for Mac and Windows, instead of Linux. So here I record a bit the script I am using to do it"}}},"pageContext":{"slug":"/notes/Set-up-UCL-VPN-for-Linux-System"}}}