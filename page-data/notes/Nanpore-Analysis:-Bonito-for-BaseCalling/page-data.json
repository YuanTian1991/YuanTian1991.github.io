{
    "componentChunkName": "component---src-templates-note-template-js",
    "path": "/notes/Nanpore-Analysis:-Bonito-for-BaseCalling",
    "result": {"data":{"markdownRemark":{"html":"<p><a href=\"https://github.com/nanoporetech/bonito\">Bonito</a> is also an official software provide by Nanopore company, which also use machine learning for base calling. Also, it would integrate with <a href=\"https://github.com/nanoporetech/remora\">Remora</a>. I have check in detail what are the clear difference between Boito and Guppy, but here I quickly recorded the code I need to bonito running.</p>\n<h2>1. Minimap Preparasion</h2>\n<p>To run Bonito, I need to firstly creart indexed reference. After install of minimap2 and download of hg38.fq.gz, I can run below command for indexing.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">minimap2 -x map-ont -d MT-human-ont.mmi ./hg38.fa.gz</code></pre></div>\n<h2>2. Install Bonito</h2>\n<p>I encountered some problem when install Bonito as <code class=\"language-text\">pip install ont-bonito</code> seems not working on my server, by checking cuda seting with <code class=\"language-text\">nvidia-smi</code> and the <a href=\"https://github.com/nanoporetech/bonito/releases\">release page</a>, I tried to install with below command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> -f https://download.pytorch.org/whl/torch_stable.html ont-bonito-cuda113</code></pre></div>\n<p>Note that after installation, the software is located in <code class=\"language-text\">/home/tian/.local/bin</code>, which is not in my default exported path, thus I added a line in my <code class=\"language-text\">.zshrc</code> to make it work.</p>\n<h2>3. Run Bonito</h2>\n<p>After installation of Bonito and preparasion of minimap, now I can run Bonito for base calling. In my case, I am using Bonito for 5mC calling, which will directly use Remora pre-trained model for base calling. One issue I am facing now is the the sequencing data size is too big. Totally there are 7100+ fast5 files. Thus in terms of my server situation. I can only download each 100 of them, then run Bonito, then remove those files.</p>\n<div class=\"gatsby-highlight\" data-language=\"r\"><pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># This is a scrtipt to automatically download fast5 folder to server, then preprocess them with Bonito.</span>\n<span class=\"token comment\"># Author: Tian</span>\n\nlibrary<span class=\"token punctuation\">(</span><span class=\"token string\">\"glue\"</span><span class=\"token punctuation\">)</span>\n\nsource<span class=\"token punctuation\">(</span><span class=\"token string\">\"./NoticeEmail.R\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Firstly get list of fast5 files from server.</span>\nf5List <span class=\"token operator\">&lt;-</span> read.csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"./f5List.txt\"</span><span class=\"token punctuation\">,</span> head<span class=\"token operator\">=</span>F<span class=\"token punctuation\">)</span>\nf5List <span class=\"token operator\">&lt;-</span> as.character<span class=\"token punctuation\">(</span>f5List<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Cut all samples into 72 groups, in this case, each group has 100 files.</span>\nbatches <span class=\"token operator\">&lt;-</span> as.numeric<span class=\"token punctuation\">(</span>cut<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>length<span class=\"token punctuation\">(</span>f5List<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nDownloadFolder <span class=\"token operator\">&lt;-</span> <span class=\"token string\">\"DownloadedF5\"</span>\nPreprocessedFolder <span class=\"token operator\">&lt;-</span> <span class=\"token string\">\"PreprocessedBAM\"</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file.exists<span class=\"token punctuation\">(</span>DownloadFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> dir.create<span class=\"token punctuation\">(</span>DownloadFolder<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file.exists<span class=\"token punctuation\">(</span>PreprocessedFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> dir.create<span class=\"token punctuation\">(</span>PreprocessedFolder<span class=\"token punctuation\">)</span>\n\nzz <span class=\"token operator\">&lt;-</span> file<span class=\"token punctuation\">(</span><span class=\"token string\">\"log.txt\"</span><span class=\"token punctuation\">,</span> open <span class=\"token operator\">=</span> <span class=\"token string\">\"wt\"</span><span class=\"token punctuation\">)</span>\nsink<span class=\"token punctuation\">(</span>zz <span class=\"token punctuation\">,</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span>\nsink<span class=\"token punctuation\">(</span>zz<span class=\"token punctuation\">,</span> type <span class=\"token operator\">=</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">72</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    message<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n =========== Running batch \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># For each batch, I download it from RDS with rsync.</span>\n    targetF5 <span class=\"token operator\">&lt;-</span> f5List<span class=\"token punctuation\">[</span>batches <span class=\"token operator\">==</span> i<span class=\"token punctuation\">]</span>\n    targetF5 <span class=\"token operator\">&lt;-</span> paste0<span class=\"token punctuation\">(</span><span class=\"token string\">\"/mnt/gpfs/live/rd00__/ritd-ag-project-rd00xq-tyuan50/\"</span><span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>targetF5<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    targetF5 <span class=\"token operator\">&lt;-</span> paste<span class=\"token punctuation\">(</span>targetF5<span class=\"token punctuation\">,</span> collapse<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n\n    cmd <span class=\"token operator\">&lt;-</span> glue<span class=\"token punctuation\">(</span><span class=\"token string\">\"sshpass -p 'password' rsync -chavzP --stats regmtyu@ad.ucl.ac.uk@ssh.rd.ucl.ac.uk:'{targetF5}' {DownloadFolder}\"</span><span class=\"token punctuation\">)</span>\n    system<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Run Bonito, here I am using 5mc Model.</span>\n    cmd <span class=\"token operator\">&lt;-</span> glue<span class=\"token punctuation\">(</span><span class=\"token string\">\"nice -n 10 bonito basecaller dna_r9.4.1_e8_sup@v3.3 --device cuda:0 ./{DownloadFolder} --modified-bases 5mc --reference ../S01_Minimap/MT-human-ont.mmi --recursive --alignment-threads 100 > ./{PreprocessedFolder}/5hmC_batch{i}.bam\"</span><span class=\"token punctuation\">)</span>\n    system<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Remove all pre-downloaded file.</span>\n    cmd <span class=\"token operator\">&lt;-</span> <span class=\"token string\">\"rm -rf ./{DownloadFolder}/*\"</span>\n    system<span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># Email modification</span>\n    NoticeEmail<span class=\"token punctuation\">(</span>paste0<span class=\"token punctuation\">(</span><span class=\"token string\">\"Bonito 5hmC Batch \"</span><span class=\"token punctuation\">,</span> i <span class=\"token punctuation\">,</span> <span class=\"token string\">\" Done\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Good it's still running...\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nsink<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsink<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The model <code class=\"language-text\">dna_r9.4.1_e8_sup@v3.3</code> is decided by the sequencing machine and flow cell type. It should be provided in sequencing information directly.</p>\n<p>The <code class=\"language-text\">--device cuda:0</code> is setting for GPU. Currently, according to <a href=\"https://github.com/nanoporetech/bonito/issues/13\">some github discussion</a>, Bonito only support only one GPU. In my case I am using only one CUDA for runnning. <strong>I tried to use multiple CUDA for running at the same time but eventually failed</strong>. I guess there is something wrong with the CUDA setting on my server.</p>\n<p>There is a email notification for me after each run finish. I implemented it as posted <a href=\"https://yuantian1991.github.io/notes/Send-Email-in-R-with-mailR\">here</a>.</p>\n<p>After this setting, after every 5-6 hours, I will have one BAM file generated from each batch. After all the batches are done. I can use Modbam2bed to get 5mC signals.</p>","frontmatter":{"date":"June 02, 2022","slug":"/notes/Nanpore-Analysis:-Bonito-for-BaseCalling","title":"Nanpore Analysis: Bonito for BaseCalling","tags":["Nanopore"],"abstract":"After using Guppy, I was recommended to use Bonito for base calling, it is said that Bonito has pretty high accuracy when compared with old method. More important, it can directly use remora for methylation analysis. Here is a record of how I use bonito for base calling"}}},"pageContext":{"slug":"/notes/Nanpore-Analysis:-Bonito-for-BaseCalling"}},
    "staticQueryHashes": ["63159454"]}