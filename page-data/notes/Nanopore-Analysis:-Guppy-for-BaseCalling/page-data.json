{
    "componentChunkName": "component---src-templates-note-template-js",
    "path": "/notes/Nanopore-Analysis:-Guppy-for-BaseCalling",
    "result": {"data":{"markdownRemark":{"html":"<p>Guppy is one of them official base calling software provided by Nanopore, it use machine learning for base calling. Basically my understanding is that it will has been pre-trained to identify what “signal” represent what base “ATCG”, then when the program run, it will classify each signal based on the pre-trained mode. Maybe that’s why it ask use to provided flow-cell type and kit type, because different material/protocol return different ML models. <strong>Guppy can automatically do works like trimming, low-quality reads filtering and estimate methylation probability.</strong></p>\n<p>In theory, Nanopore sequencing can be export directly when sequencing, but according to this <a href=\"https://timkahlke.github.io/LongRead_tutorials/BS_G.html\">post</a>. By doing so, it will delay the process of sequencing, and also I think in many cases, when people do Nanopore sequencing once, they may want to use the data for more downstream analysis from methylation to 5hmC, thus “read-time basecalling” seems not very necessary then. However, this real-time base calling concept could be vital in the future, only after other big issues like storage, speed, accuracy .etc all are solved. In that day, there is maybe no need for Bioinformatician anymore...</p>\n<p>Luckily I have GPU support. Note that the CUDA version is 11.4 here.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tian@slms-ci-beck-02 ~ $ nvidia-smi\nTue Apr  <span class=\"token number\">5</span> 00:48:41 <span class=\"token number\">2022</span>\n+-----------------------------------------------------------------------------+\n<span class=\"token operator\">|</span> NVIDIA-SMI <span class=\"token number\">470.103</span>.01   Driver Version: <span class=\"token number\">470.103</span>.01   CUDA Version: <span class=\"token number\">11.4</span>     <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>-------------------------------+----------------------+----------------------+\n<span class=\"token operator\">|</span> GPU  Name        Persistence-M<span class=\"token operator\">|</span> Bus-Id        Disp.A <span class=\"token operator\">|</span> Volatile Uncorr. ECC <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> Fan  Temp  Perf  Pwr:Usage/Cap<span class=\"token operator\">|</span>         Memory-Usage <span class=\"token operator\">|</span> GPU-Util  Compute M. <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                               <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>               MIG M. <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">+=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">+=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   <span class=\"token number\">0</span>  NVIDIA GeForce <span class=\"token punctuation\">..</span>.  Off  <span class=\"token operator\">|</span> 00000000:01:00.0 Off <span class=\"token operator\">|</span>                  N/A <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">30</span>%   41C    P8    21W / 350W <span class=\"token operator\">|</span>     19MiB / 24265MiB <span class=\"token operator\">|</span>      <span class=\"token number\">0</span>%      Default <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                               <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>                  N/A <span class=\"token operator\">|</span>\n+-------------------------------+----------------------+----------------------+\n<span class=\"token operator\">|</span>   <span class=\"token number\">1</span>  NVIDIA GeForce <span class=\"token punctuation\">..</span>.  Off  <span class=\"token operator\">|</span> 00000000:21:00.0 Off <span class=\"token operator\">|</span>                  N/A <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">30</span>%   36C    P8    21W / 350W <span class=\"token operator\">|</span>      5MiB / 24268MiB <span class=\"token operator\">|</span>      <span class=\"token number\">0</span>%      Default <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>                               <span class=\"token operator\">|</span>                      <span class=\"token operator\">|</span>                  N/A <span class=\"token operator\">|</span>\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n<span class=\"token operator\">|</span> Processes:                                                                  <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>  GPU   GI   CI        PID   Type   Process name                  GPU Memory <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>        ID   ID                                                   Usage      <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    <span class=\"token number\">0</span>   N/A  N/A      <span class=\"token number\">2846</span>      G   /usr/lib/xorg/Xorg                  9MiB <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    <span class=\"token number\">0</span>   N/A  N/A      <span class=\"token number\">3059</span>      G   /usr/bin/gnome-shell                8MiB <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    <span class=\"token number\">1</span>   N/A  N/A      <span class=\"token number\">2846</span>      G   /usr/lib/xorg/Xorg                  4MiB <span class=\"token operator\">|</span>\n+-----------------------------------------------------------------------------+\ntian@slms-ci-beck-02 ~ $</code></pre></div>\n<p>There are some preparation work should be done before using Guppy. For example find <code class=\"language-text\">flowcell</code> type and <code class=\"language-text\">kit</code> type. In other word, I think Guppy pre-trained a lot of ML models for different combinations of flowcell and kit, so when use Guppy, we should find out what is our Nanopore data setting. Or another solution is to set default config file. In my case it’s dna_r9.4.1_450bps_hac_prom.</p>\n<h2>Installation of Guppy</h2>\n<p>I don't know why but <a href=\"https://community.nanoporetech.com/docs/prepare/library_prep_protocols/Guppy-protocol/v/gpb_2003_v1_revad_14dec2018/linux-guppy\">the installation page</a> is hidden in Nanpore Community, seems I need to register to see it. I guess there is some patant protection here, so I won't paste the command here.</p>\n<h2>Command for Guppy</h2>\n<p>I am using version 6.1.1+1f6bfa7f8 for Guppy here.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">guppy_basecaller -i ../S01_subFast5 \\\n  -s ./guppyResult \\\n  -c dna_r9.4.1_450bps_hac_prom.cfg \\\n  --compress_fastq \\\n  -a ../S02_Minimap2/MT-human-ont.mmi \\\n  -x 'auto' \\\n  --bam_out\n</code></pre></div>\n<p>It seems those runner and number caller is not working now...I need to debug more.</p>\n<h2>Output Result</h2>\n<p>In above code, I set <code class=\"language-text\">-s</code> as “guppyResult”, that’s where all result will be written into. One important file is <code class=\"language-text\">sequencing_summary.txt</code>. It contains informations like chr, start, end, alignment_accuracy, alignment_coverage .etc for each reads. In this file, each row is one read, so totally there are 24000 row. which is exactly what I counted as before. For example, I found out the mean read length in my subset fast5 file is 7930.</p>\n<p>Another important thing is <code class=\"language-text\">pass</code> folder.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">tian@slms-ci-beck-02 /scratch1/Tian/Nanopore/S03_Guppy/guppyResult/pass $ <span class=\"token function\">ls</span> -lha\ntotal 529M\ndrwxrwxr-x <span class=\"token number\">2</span> tian tian <span class=\"token number\">4</span>.0K Apr  <span class=\"token number\">5</span> 01:00 <span class=\"token builtin class-name\">.</span>\ndrwxrwxr-x <span class=\"token number\">5</span> tian tian  <span class=\"token number\">264</span> Apr  <span class=\"token number\">5</span> 01:00 <span class=\"token punctuation\">..</span>\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  21M Apr  <span class=\"token number\">5</span> 00:59 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_0_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  34M Apr  <span class=\"token number\">5</span> 00:59 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_1_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  35M Apr  <span class=\"token number\">5</span> 00:59 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_2_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  33M Apr  <span class=\"token number\">5</span> 01:00 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_3_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  35M Apr  <span class=\"token number\">5</span> 01:00 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_4_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  34M Apr  <span class=\"token number\">5</span> 01:00 bam_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_5_0.bam\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  36M Apr  <span class=\"token number\">5</span> 00:59 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_0_0.fastq\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  60M Apr  <span class=\"token number\">5</span> 00:59 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_1_0.fastq\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  63M Apr  <span class=\"token number\">5</span> 00:59 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_2_0.fastq\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  60M Apr  <span class=\"token number\">5</span> 00:59 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_3_0.fastq\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  63M Apr  <span class=\"token number\">5</span> 01:00 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_4_0.fastq\n-rw-rw-r-- <span class=\"token number\">1</span> tian tian  61M Apr  <span class=\"token number\">5</span> 01:00 fastq_runid_dc2ac203adf3e034d363fe1208fc805805ace1f5_5_0.fastq</code></pre></div>\n<p>So for the output, it looks like it’s based on file index, which means one fast5 file could eventually leads to one bam file. So, I guess if for one folder, there are 100 fast5 files, they all belong to one person (sample), after this step, we actually get 100 small bam files for this person, we should be able to merge them into one large bam file. Here I think Guppy did not take methylation information into consideration? Need to explore more...</p>","frontmatter":{"date":"April 05, 2022","slug":"/notes/Nanopore-Analysis:-Guppy-for-BaseCalling","title":"Nanopore Analysis: Guppy for BaseCalling","tags":["nanopore"],"abstract":"Trying to use Guppy, an official Nanopore provided software for BaseCalling, which means convert \"pore signals\" into fastq ATCG information. But actually, Guyppy can also do alignment, barcoding, trimming works .etc"}}},"pageContext":{"slug":"/notes/Nanopore-Analysis:-Guppy-for-BaseCalling"}},
    "staticQueryHashes": ["63159454"]}