{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./src/pages/index.js"],"names":["props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","root","outlined","concat","rounded","withStyles","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name","IndexPage","state","componentDidMount","console","log","this","render","data","title","allMarkdownRemark","edges","map","node","key","to","frontmatter","slug","style","textDecoration","Box","my","fontWeight","marginBottom","Typography","fontSize","margin","date","tags","tag","tagIndex","abstract","React","pageQuery","padding","cursor","fontFamily"],"mappings":"iOAiCI,EAAqB,cAAiB,SAAeA,EAAOC,GAC9D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBP,EAAMQ,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBT,EAAMU,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAiBX,EAAMY,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,EAAQ,YAAyBb,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEzG,OAAoB,gBAAoBM,EAAW,YAAS,CAC1DH,UAAW,YAAKD,EAAQY,KAAMX,EAAuB,aAAZS,EAAyBV,EAAQa,SAAWb,EAAQ,YAAYc,OAAON,KAAcF,GAAUN,EAAQe,SAChJhB,IAAKA,GACJY,OAGU,SAAAK,EAAA,IA7CK,SAAgBC,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYJ,OAAOQ,IAAU,CACtCC,UAAWF,MAGR,YAAS,CAEdT,KAAM,CACJY,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,MAAOX,EAAMQ,QAAQI,KAAKC,QAC1BC,WAAYd,EAAMe,YAAYC,OAAO,eAIvClB,QAAS,CACPmB,aAAcjB,EAAMkB,MAAMD,cAI5BrB,SAAU,CACRuB,OAAQ,aAAatB,OAAOG,EAAMQ,QAAQY,WAE3CnB,KAqB6B,CAChCoB,KAAM,YADO,CAEZ,G,gEC3CGC,E,oBACJ,WAAYzC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACK0C,MAAQ,GAFI,E,kHAMnBC,kBAAA,WACEC,QAAQC,IAAIC,KAAK9C,Q,EAGnB+C,OAAA,WAAU,IAAD,EACmBD,KAAK9C,MAAvBE,EADD,EACCA,QAAS8C,EADV,EACUA,KAEjB,OACE,kBAAE,IAAF,KACE,kBAAC,IAAD,CAAKC,MAAM,SAETD,EAAKE,kBAAkBC,MAAMC,KAAI,WAAW5B,GAAW,IAAnB6B,EAAkB,EAAlBA,KAClC,OACE,kBAAC,OAAD,CAAMC,IAAK9B,EAAO+B,GAAIF,EAAKG,YAAYC,KAAMC,MAAO,CAAEC,eAAgB,SACpE,kBAAC,EAAD,CAAOL,IAAK9B,EAAOd,UAAW,EAAGP,UAAWD,EAAQY,MAClD,kBAAC8C,EAAA,EAAD,CAAKC,GAAI,GAEP,wBAAIH,MAAO,CAACI,WAAY,MAAOC,aAAc,UAC1CV,EAAKG,YAAYP,MADpB,KAIA,kBAACe,EAAA,EAAD,CAAaN,MAAO,CAAEI,WAAY,MAAOG,SAAU,QAASnC,MAAO,OAAQoC,OAAQ,YAChFb,EAAKG,YAAYW,KAEhBd,EAAKG,YAAYY,KAAKhB,KAAI,SAACiB,EAAKC,GAC9B,OACE,0BAAMhB,IAAKgB,GACR,MACD,8BAEED,QAOZ,uBAAGX,MAAO,CAAEI,WAAY,MAAOG,SAAU,QACpCZ,EAAKG,YAAYe,kB,GA7ClBC,IAAMlE,WAmGjBmE,EAAS,aAqBNvD,uBAtDD,SAAAC,GAAK,MAAK,CACvBL,KAAM,CAEJ4D,QAAS,MACTR,OAAQ,QAERS,OAAQ,UACRjD,gBAAiB,qBACjB,UAAW,CACTA,gBAAiB,sBAEjB,qBAAsB,gCACtB,iBAAkB,gCAClB,WAAc,kCAGlB2C,IAAK,CACHO,WAAY,WACZF,QAAS,cAETtC,aAAc,QACduC,OAAQ,UACR,UAAW,CACTjD,gBAAiB,YAEjB,qBAAsB,gCACtB,iBAAkB,gCAClB,WAAc,qCA2BJR,CAAmBuB","file":"component---src-pages-index-js-e5d6376622634dc7586f.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React from \"react\"\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Typography, Box, Paper } from '@material-ui/core';\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props)\n  }\n\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      < Layout >\n        <SEO title=\"Note\" />\n        {\n          data.allMarkdownRemark.edges.map(({ node }, index) => {\n            return (\n              <Link key={index} to={node.frontmatter.slug} style={{ textDecoration: \"none\", }}>\n                <Paper key={index} elevation={0} className={classes.root}>\n                  <Box my={1}>\n                    {/* <Typography variant=\"h4\" component=\"h1\" style={{ fontWeight: \"700\" }} gutterBottom> */}\n                    <h2 style={{fontWeight: '700', marginBottom: '0.2em'}}>\n                      {node.frontmatter.title} </h2>\n                    {/* </Typography> */}\n\n                    <Typography  style={{ fontWeight: \"100\", fontSize: '0.9em', color: 'gray', margin: '0px 0px' }}>\n                      {node.frontmatter.date}\n                      {\n                        node.frontmatter.tags.map((tag, tagIndex) => {\n                          return (\n                            <span key={tagIndex}>\n                              {' | '}\n                              <span\n                              // className={classes.tag}\n                              >{tag}</span>\n                            </span>\n                          )\n                        })\n                      }\n                    </Typography>\n\n                    <p style={{ fontWeight: \"300\", fontSize: '1em'}}>\n                        {node.frontmatter.abstract}\n                    </p>\n\n                    {/* <Typography style={{fontWeight: '300', fontSize: '0.7em'}}>\n                      {node.frontmatter.abstract}\n                    </Typography> */}\n                  </Box>\n                </Paper>\n              </Link>\n            )\n          })\n        }\n      </Layout >\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst styles = theme => ({\n  root: {\n    // minWidth: 275,\n    padding: '1em',\n    margin: '0.5em',\n    // marginBottom: '2em',\n    cursor: 'pointer',\n    backgroundColor: 'rgba(255, 0, 0, 0)',\n    \"&:hover\": {\n      backgroundColor: 'rgba(0, 0, 0, 0.07)',\n      // backgroundColor: 'whitesmoke',\n      \"-webkit-transition\": \"background-color 100ms linear\",\n      \"-ms-transition\": \"background-color 100ms linear\",\n      \"transition\": \"background-color 100ms linear\",\n    }\n  },\n  tag: {\n    fontFamily: \"consolas\",\n    padding: '0.1em 0.5em',\n    // border: '0.5px solid lightgrey',\n    borderRadius: '0.1em',\n    cursor: 'pointer',\n    \"&:hover\": {\n      backgroundColor: \"lightgrey\",\n      // color: 'white',\n      \"-webkit-transition\": \"background-color 500ms linear\",\n      \"-ms-transition\": \"background-color 500ms linear\",\n      \"transition\": \"background-color 500ms linear\",\n    }\n  }\n});\n\n\nexport const pageQuery = graphql`\n{\n  allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n    limit: 1000\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          slug\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n          abstract\n        }\n      }\n    }\n  }\n}\n`\n\nexport default (withStyles(styles)(IndexPage))\n"],"sourceRoot":""}